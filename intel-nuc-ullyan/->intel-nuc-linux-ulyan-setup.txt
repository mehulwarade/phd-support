###############################################
INTEL NUC 
    1TB SSD - 850GB available
    32 GB RAM
    I7 Intel Octa Core CPU

NUC 
    ETH IP: 192.168.5.10
    #WLAN IP: 192.168.1.112
    ETH Bridge IP:192.168.1.105
    OS: Linux Mint Ulyana 20 -> Everything working <- https://linuxmint.com/edition.php?id=281
    Old OS: Linux Mint Uma 20.2 -> Condor not working <- https://linuxmint.com/edition.php?id=288
    User: mehul
    Password: z

Switch 1 24-port IP: 192.168.5.9 
    Password: Netgear1

Switch 1 8-port IP: 192.168.5.100
    MAC: bc:a5:11:26:e6:1a

Router Login:
    name: optus
    password: mcs
    IP: 192.168.5.1
    SSID: cluster_5GH/ cluster
###############################################
## Disable secure Boot in the UEFI settings ###
###############################################

## Install List 'sudo' for all###
apt install htop
apt install sudo
apt install openssh-server
apt install tcpdump
apt install dnsmasq
apt install rpcbind
apt install nfs-kernel-server
apt install logrotate
#apt install binutils debootstrap <- Chroot <- Purged
[RPi] apt install python3-pip <- For Numpy #https://phoenixnap.com/kb/install-numpy
[RPi] apt install build-essential #https://stackoverflow.com/a/40387547
[RPi] apt install gcc
[RPi] apt install python3-dev <- For Numpy (Need apt update for this to work)
[RPi] pip3 install numpy #ERROR: failed to link c OR; failed to create dir -> install build-essential LINE42
[RPi] pip3 install matplotlib
[RPi] apt install libopenjp2-7-dev <- # Genome - Frequency ERROR: ImportError: libopenjp2.so.7

[FEPAC install pre-req]
apt install nodejs
apt install npm


1. Edit the interfaces file to set up static IP address.
2. Copy "dnsmasq.conf" and "ethers"
    # REF: https://github.com/musukvl/raspberry-pi-wifi-router-config/blob/master/dnsmasq.conf
    # REF: https://www.linux.org/docs/man8/dnsmasq.html
3. Copy restartservices.sh
4. Make "/nfs", "/tftpboot", "/home/mehul/shared_fs" folders
    sudo mkdir -p /tftpboot
    sudo chmod 777 /tftpboot
    sudo mkdir -p /nfs
5. Edit the /etc/exports for nfs
    /home/mehul/shared_fs *(rw,sync,no_subtree_check,no_root_squash,insecure)
    /tftpboot *(rw,sync,no_subtree_check,no_root_squash,insecure)
    /nfs *(rw,sync,no_subtree_check,no_root_squash,insecure)

6. Move "tftp-create.sh" and "tftp.tar.gz" to "/tftpboot" and create files for nodes:
    sh tftp-create.sh node1 dc-a6-32-c1-a8-02

7. Move "nfs-rootfs.sh" and "rootfs-tar-gz" to "/nfs" and create files for nodes:
    sh nfs-rootfs.sh node1 dc-a6-32-c1-a8-02

8. Setup Rpi 4b (if new) for network booting -> See 3.rpi4-netboot.log

9. Install htcondor ulyana -> See 2.htcondor.log

10. Install Pegasus ulyana -> See 1.pegasus.log

11. Setup Montage -> See wf-montage.log



************


** Commands:
    sudo systemctl status nfs-server.service
    sudo systemctl status dnsmasq

    sudo systemctl restart dnsmasq
    sudo systemctl restart nfs-server.service

    sudo tcpdump -i enp89s0 port bootpc
    sudo tail -F /var/log/daemon.log
    #if no daemon.log then use syslog file:
    sudo tail -F /var/log/syslog

    sudo nano /etc/dnsmasq.conf
    sudo nano /etc/ethers



## Tips - OLD

** Enable sudo 
 
        By default sudo is not installed on Debian, but you can install it. First enable su-mode:
            su -

        Install sudo by running:
            apt-get install sudo

        After that you would need to play around with users and permissions. Give sudo right to your own user. 
            usermod -aG sudo yourusername

        Make sure your sudoers file have sudo group added. Run:
        visudo to modify sudoers file and add following line into it (if it is missing): 

        # Allow members of group sudo to execute any command
        %sudo   ALL=(ALL:ALL) ALL
        You need to relogin or reboot device completely for changes to take effect.

** Enabling passwordless ssh
 
        1. Create key - ssh-keygen
            Save the key with no password somewhere safe
        
        2. Copy the key to the node
            ssh-copy-id -i sshkey mehul@192.168.0.19
                or if saved in some other place
            ssh-copy-id -i /Users/mwarade/Desktop/$location/key nodeaddress
        
        3. SSH using the key
            ssh -i sshkey mehul@192.168.0.19
            ssh -i key node


** SSH by just the hostname (No need for user)
 
    nano ~/.ssh/config
        Host NameToSSHInto
            User UsernameToSSHAs
            Hostname IPAddress/DNS

** Creating and unzipping tar files:

    Create: tar -czvf name-of-archive.tar.gz /path/to/directory-or-file

        -c: Create an archive.
        -z: Compress the archive with gzip.
        -v: Display progress in the terminal while creating the archive, also known as “verbose” mode. The v is always optional in these commands, but it’s helpful.
        -f: Allows you to specify the filename of the archive.

    Unzip: tar -xzvf archive.tar.gz

** Remotely running a command

    ssh -t user@remote-host "command"

    Eg: ssh -t 192.168.5.103 "sudo condor_master"




## Error

** dnsmasq could not start as port 53 is already in use
    sudo systemctl disable systemd-resolved
    sudo systemctl mask systemd-resolved
    sudo systemctl stop systemd-resolved
    Ref: https://askubuntu.com/a/1170073

** sudo: /usr/bin/sudo must be owned by uid 0 and have the setuid bit set
    
    1. Login as root
    
    chown 0:0 /usr/bin/sudo && chmod 4755 /usr/bin/sudo
    chown 0:0 /usr/lib/sudo/sudoers.so
    chown 0:0 /etc/sudoers
    chown 0:0 /etc/sudoers.d/*
    chown 0:0 /var/lib/sudo/*

    REF: https://askubuntu.com/a/471503

** tftpboot Error

    the tftpboot names should be seperated by dash not colon
    dc:a6:32:c1:a8:02 no
    dc-a6-32-c1-a8-02 yes

** No internet on the node:
    [ ISSUE SOLVED ]: No internet on individual nodes: 
    Need to add the default gateway by running following commands. If 'route' command does not exist install using "sudo apt install net-tools"

    sudo ip route del 0/0 dev eth0 &> /dev/null
    a=`route | awk "/${wlan}/"'{print $5+1;exit}'`
    sudo route add -net default gw 192.168.5.1 netmask 0.0.0.0 dev eth0 metric $a
                                    √ your router

    [WORKS] sudo route add -net default gw 192.168.5.1 netmask 0.0.0.0 dev eth0
            sudo route add -net default gw 192.168.1.1 netmask 0.0.0.0 dev enx00249b6cf06b

    Also try adding "nameserver 192.168.1.1" to /etc/resolv.conf



sudo mount 192.168.5.10:/home/mehul/shared_fs /home/mehul/shared_fs



** Node info:
    Node    MAC                     TFTPBOOT          IP
	Athom Smart Plug for NUC -> 40-F5-20-CE-E0-68	192.168.1.199

    Master  1c:69:7a:a7:61:a8       Intel NUC        92.168.5.10
	Master 00:24:9b:6c:f0:6b -> enx00249b6cf06b -> 192.168.1.198
    
	Switch xx 24-port 80:CC:9C:9B:42:DF
    Switch 1 bc-a5-11-26-e6-1a 192.168.5.150
    Switch 2 38-94-ed-a9-61-72 192.168.5.151
    Switch 3 bc-a5-11-26-ea-d0 192.168.5.152

bc:a5:11:26:e5:1a

    1       dc:a6:32:c1:a8:02       dc-a6-32-c1-a8-02 192.168.5.101
    2       dc:a6:32:af:b6:97       dc-a6-32-af-b6-97 192.168.5.102
    3       dc:a6:32:c1:a7:7a       dc-a6-32-c1-a7-7a 192.168.5.103
    4       dc:a6:32:c1:a8:73       dc-a6-32-c1-a8-73 192.168.5.104
    5       dc:a6:32:c1:a8:07       dc-a6-32-c1-a8-07 192.168.5.105
    6       dc:a6:32:c1:a8:1f       dc-a6-32-c1-a8-1f 192.168.5.106
    7       dc:a6:32:c1:a8:4c       dc-a6-32-c1-a8-4c 192.168.5.107
    8       dc:a6:32:c1:a8:1c       dc-a6-32-c1-a8-1c 192.168.5.108
    9       dc:a6:32:c1:a8:3a       dc-a6-32-c1-a8-3a 192.168.5.109
    10      dc:a6:32:c1:a8:28       dc-a6-32-c1-a8-28 192.168.5.110
    11      dc:a6:32:af:b6:b7       dc-a6-32-af-b6-b7 192.168.5.111
    12      dc:a6:32:af:b4:6c       dc-a6-32-af-b4-6c 192.168.5.112
    13      dc:a6:32:c1:a7:e3       dc-a6-32-c1-a7-e3 192.168.5.113
    14      dc:a6:32:c1:a8:ee       dc-a6-32-c1-a8-ee 192.168.5.114
    15      dc:a6:32:c1:a8:29       dc-a6-32-c1-a8-29 192.168.5.115
    16      dc:a6:32:c1:a8:0d       dc-a6-32-c1-a8-0d 192.168.5.116
    17      dc:a6:32:c1:a7:59       dc-a6-32-c1-a7-59 192.168.5.117
    18      dc:a6:32:c1:a7:56       dc-a6-32-c1-a7-56 192.168.5.118
    19      dc:a6:32:c1:a8:9a       dc-a6-32-c1-a8-9a 192.168.5.119
    20      dc:a6:32:c1:a8:32       dc-a6-32-c1-a8-32 192.168.5.120

sh nfs-rootfs.sh node1 dc-a6-32-c1-a8-02
sh nfs-rootfs.sh node2 dc-a6-32-af-b6-97
sh nfs-rootfs.sh node3 dc-a6-32-c1-a7-7a
sh nfs-rootfs.sh node4 dc-a6-32-c1-a8-73
sh nfs-rootfs.sh node5 dc-a6-32-c1-a8-07
sh nfs-rootfs.sh node6 dc-a6-32-c1-a8-1f
sh nfs-rootfs.sh node7 dc-a6-32-c1-a8-4c
sh nfs-rootfs.sh node8 dc-a6-32-c1-a8-1c
sh nfs-rootfs.sh node9 dc-a6-32-c1-a8-3a
sh nfs-rootfs.sh node10 dc-a6-32-c1-a8-28
sh nfs-rootfs.sh node11 dc-a6-32-af-b6-b7
sh nfs-rootfs.sh node12 dc-a6-32-af-b4-6c
sh nfs-rootfs.sh node13 dc-a6-32-c1-a7-e3
sh nfs-rootfs.sh node14 dc-a6-32-c1-a8-ee
sh nfs-rootfs.sh node15 dc-a6-32-c1-a8-29
sh nfs-rootfs.sh node16 dc-a6-32-c1-a8-0d
sh nfs-rootfs.sh node17 dc-a6-32-c1-a7-59
sh nfs-rootfs.sh node18 dc-a6-32-c1-a7-56
sh nfs-rootfs.sh node19 dc-a6-32-c1-a8-9a
sh nfs-rootfs.sh node20 dc-a6-32-c1-a8-32

######################################################
            Netgear switch CLI
######################################################

# REF: https://community.netgear.com/t5/Smart-Plus-and-Smart-Pro-Managed/GS752TPv2-Howto-enable-disable-POE-via-SNMP/m-p/2122604

Port 24 POE off:
snmpset -t 10 -v 2c -c custom 192.168.1.1 iso.3.6.1.2.1.105.1.1.1.3.1.24 i 2
Port 24 POE on:
snmpset -t 10 -v 2c -c custom 192.168.1.1 iso.3.6.1.2.1.105.1.1.1.3.1.24 i 1

Port 36 off:
snmpset -t 10 -v 2c -c custom 192.168.1.1 iso.3.6.1.2.1.2.2.1.7.36 i 2
Port 36 on:
snmpset -t 10 -v 2c -c custom 192.168.1.1 iso.3.6.1.2.1.2.2.1.7.36 i 1


EX: ON: snmpset -t 10 -v 2c -c linux_wt 192.168.5.9 iso.3.6.1.2.1.105.1.1.1.3.1.1 i 1



######################################################
            Starting from new. Everything turned off
######################################################

Turn on the Sagecom router.
    Sagecom router setting:
        Static IP for Intel nuc: 1c:69:7a:a7:61:a8 : 192.168.5.10
        Static for Netgear Switch: 192.168.5.9
    
Turn on Netgear Switch.
    Netgear Switch should take the static IP, or
    Login and set static IP: 192.168.5.9
    Set SNMP access to Intel NUC IP to read and write.
    Password: Netgear1

Turn on Intel NUC:
    Should take IP address: 192.168.5.10

######################################################
    Passing the password through CLI for sudo
######################################################

echo <Password> | sudo -S <Command>

eg.: echo mcs | sudo -S cho a


######################################################
		Setting up NAT in the seetup
######################################################

Ref: https://how-to.fandom.com/wiki/How_to_set_up_a_NAT_router_on_a_Linux-based_computer

