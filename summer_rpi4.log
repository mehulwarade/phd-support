#switch

1 192.168.1.99
38:94:ED:A9:61:72

2 192.168.1.100
bc:a5:11:26:ea:c4

#node
1 192.168.1.161
dc:a6:32:c1:a8:02 
dc-a6-32-c1-a8-02 

2 192.168.1.162
dc:a6:32:af:b6:97
dc-a6-32-af-b6-97

3 192.168.1.163
dc:a6:32:c1:a7:7a
dc-a6-32-c1-a7-7a

4 192.168.1.164
dc:a6:32:c1:a8:73
dc-a6-32-c1-a8-73

5 192.168.1.165
dc:a6:32:c1:a8:07
dc-a6-32-c1-a8-07

6 192.168.1.166
dc:a6:32:c1:a8:1f
dc-a6-32-c1-a8-1f

7 192.168.1.167
dc:a6:32:c1:a8:4c
dc-a6-32-c1-a8-4c

8 192.168.1.168
dc:a6:32:c1:a8:1c
dc-a6-32-c1-a8-1c

9 192.168.1.169
dc:a6:32:c1:a8:3a
dc-a6-32-c1-a8-3a

10 192.168.1.170
dc:a6:32:c1:a8:28
dc-a6-32-c1-a8-28

11 192.168.1.171
dc:a6:32:c1:a7:56
dc-a6-32-c1-a7-56

12 192.168.1.172
dc:a6:32:c1:a7:59
dc-a6-32-c1-a7-59

https://linuxhit.com/raspberry-pi-pxe-boot-netbooting-a-pi-4-without-an-sd-card/#6-assumptions

change eeprom

{RPI}
sudo rpi-eeprom-config
sudo sudo -E rpi-eeprom-config --edit

BOOT_UART=0
.
.
BOOT_ORDER=0x2

change the /tftp4/[MAC]/cmdline.txt

edit the /etc/exports file -> add the nfs4 and tftp4 folders there

edit the /etc/dnsmasq.conf file

change hostname (/etc/hostname and /etc/hosts)


/tftp4/{MAC}/cmdline.txt

console=serial0,115200 console=tty1 root=/dev/nfs nfsroot=192.168.1.4:/nfs4/$1,nfsvers=4.1,proto=tcp,wsize=32768,rsize=32768 rw ip=dhcp rootwait elevator=deadline



STEPS TO RUN MONTAGE WORKFLOW

##### X86 SETUP


## copy the x86 binaries needed to generate workflow
sudo cp ~/x86-montage-binaries/* /usr/bin/

cd montage_workflow

export PYTHONPATH=`pegasus-config --python`
export PERL5LIB=`pegasus-config --perl`
export CLASSPATH=`pegasus-config --classpath`

./montage-workflow.py --center "56.7 24.0" --degrees 1.5 --band dss:DSS2B:blue --band dss:DSS2R:green --band dss:DSS2IR:red

sudo cp ~/arm-montage-binaries/* /usr/bin/

mkdir data/output

sudo chmod -R 777 ~/nfs/montage/data

cd data

## copy the arm binaries needed to generate workflow


pegasus-plan --sites condorpool -O output montage-workflow.yml
OR
pegasus-plan --sites local -O output montage-workflow.yml



cd /home/mehul/nfs/montage/data/mehul/pegasus/montage/runXXXX/

## Edit the sub files in the run directory

request_memory = 1 GB    => Requirements = Memory >= 32 && Arch =="armv7l"
remove ,/home/mehul/nfs/montage/data/mehul/pegasus/montage/runxxx/pegasus-worker-5.0.0-x86_64_ubuntu_18.tar.gz

## Edit the sh files

Comment everything

# printf "\n##############[Pegasus Lite] Figuring out the worker package to use ##############\n"  1>&2
# # figure out the worker package to use
# pegasus_lite_worker_package

# pegasus_lite_section_start stage_in

DON'T NEED TO COMMENT THE EXECUTABLES XBIT SECTION

# printf "\n##################### Checking file integrity for input files #####################\n"  1>&2
# # do file integrity checks
# pegasus-integrity --print-timings --verify=stdin 1>&2 << 'eof'
# region-oversized.hdr:poss2ukstu_blue_001_001.fits:mProject
# eof

SEARCH AND REPLACE
# https://stackoverflow.com/a/43578165
pegasus-integrity --print-timings --verify=stdin 1>&2 << 'eof'
(.+?)
eof

pegasus-integrity --print-timings --verify=stdin 1>&2 << 'eof'
$1
eof


# pegasus_lite_section_end stage_in
# set +e
# job_ec=0

sudo cp ~/pegasus-kickstart /usr/bin/


pegasus-run .

#   condor_q
#   condor_q -analyze
#   pegasus-remove .
#   cd /var/log/condor
#   pegasus_status -w 1

##### Node setup

sudo mkdir -p /usr/share/pegasus/sh/

[On x86] sudo scp /usr/share/pegasus/sh/* [NODE_IP]:/usr/share/pegasus/sh/
[On x86] sudo cp ~/arm-montage-binaries/* /nfs4/nodeXX/usr/bin/

sudo chmod -R 777 /var/lib/condor/execute




########################################
export PATH=/home/mehul/pegasus-5.0.0-x86/pegasus-5.0.0/bin:$PATH
#######################################